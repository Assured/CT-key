name: build

on:
  workflow_run:
    workflows: [commitlint]
    types:
      - completed
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-ctkey-python:
    runs-on: ubuntu-22.04
    steps:
      # Checkout Repository
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: 'recursive'

      # Setup Python
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.12

      # Install Python Dependencies
      - name: Install Python Dependencies
        run: |
          pip3 install --upgrade build

      # Build CT-Key Package
      - name: Build ctkey package
        run: |
          cd ${{ github.workspace }}/ctkey_package 
          python3 -m build

      # Store artifacts
      - name: Store artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ctkey-package
          path: ${{ github.workspace }}/ctkey_package/dist/*.whl
  
  build:
    runs-on: ubuntu-22.04
    needs: build-ctkey-python
    steps:
      # Checkout Repository
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: 'recursive'

      # Install Tools
      - name: Install Tools
        run: |
          sudo add-apt-repository -y ppa:openjdk-r/ppa
          sudo apt update
          sudo apt install -y wget build-essential python3 python3-pip \
            verilator libevent-dev libjson-c-dev device-tree-compiler \
            python3-setuptools python3-requests python3-pexpect \
            python3-colorama python3-serial python3-packaging python3-yaml \
            ninja-build curl apt-transport-https gnupg openjdk-8-jdk sed make \
            binutils gcc g++ diffutils bash patch gzip bzip2 perl tar cpio unzip \
            rsync file bc git rsync bc findutils
          sudo update-alternatives --config java
          sudo update-alternatives --config javac
          echo "deb https://repo.scala-sbt.org/scalasbt/debian all main" | sudo tee /etc/apt/sources.list.d/sbt.list
          echo "deb https://repo.scala-sbt.org/scalasbt/debian /" | sudo tee /etc/apt/sources.list.d/sbt_old.list
          curl -sL "https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x2EE0EA64E40A89B84B2DF73499E82A75642AC823" | sudo -H gpg --no-default-keyring --keyring gnupg-ring:/etc/apt/trusted.gpg.d/scalasbt-release.gpg --import
          sudo chmod 644 /etc/apt/trusted.gpg.d/scalasbt-release.gpg
          sudo apt update
          sudo apt -y install sbt

      # Setup Python
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.12

      # Install Python Dependencies
      - name: Install Python Dependencies
        run: |
          pip3 install -r requirements.txt

      # Install (n)Migen / LiteX / Cores
      - name: Install LiteX
        run: |
          wget https://raw.githubusercontent.com/enjoy-digital/litex/master/litex_setup.py
          python3 litex_setup.py --init --install --user

      # Install RISC-V GCC
      - name: Install RISC-V GCC
        run: |
          wget https://static.dev.sifive.com/dev-tools/freedom-tools/v2020.12/riscv64-unknown-elf-toolchain-10.2.0-2020.12.8-x86_64-linux-ubuntu14.tar.gz
          tar -xf $PWD/riscv64-*.tar.gz
          sudo mkdir /usr/local/riscv
          sudo cp -r $PWD/riscv64-*/* /usr/local/riscv

      # Get and install CT-Key Package
      - name: Download and install ctkey package
        uses: actions/download-artifact@v4
        with:
          name: ctkey-package

      - name: Install ctkey package
        run: |
          pip install ctkey-1.0.0-py3-none-any.whl

      # Install Yosys
      - name: Install Yosys
        run: |
          cd ${{ github.workspace }}
          wget https://github.com/YosysHQ/oss-cad-suite-build/releases/download/2025-01-08/oss-cad-suite-linux-x64-20250108.tgz
          tar -xvf oss-cad-suite-linux-x64-20250108.tgz
      
      # Build SoC
      - name: Build SoC
        run: |
          cd ${{ github.workspace }}/linux-on-litex-vexriscv
          export PATH=${{ github.workspace }}/oss-cad-suite/bin:/usr/local/riscv/bin:$HOME/.local/bin:$PATH
          python3 make.py --board orange_crab_ctkey --device 85F --doc --build

      # Build linux
      - name: Checkout Buildroot 2024.02.10
        uses: actions/checkout@v4
        with:
          repository: buildroot/buildroot
          ref: 2024.02.10
          path: ${{ github.workspace }}/buildroot

      - name: Build linux
        run: |
          cd ${{ github.workspace }}/buildroot
          make BR2_EXTERNAL=../linux-on-litex-vexriscv/buildroot/ litex_vexriscv_defconfig
          make

      # Store artifacts
      - name: Store artifacts
        uses: actions/upload-artifact@v4
        with:
          name: soc-build
          path: |
            ${{ github.workspace }}/linux-on-litex-vexriscv/images
            ${{ github.workspace }}/linux-on-litex-vexriscv/build
          if-no-files-found: error


